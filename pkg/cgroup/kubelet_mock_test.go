// Code generated by MockGen. DO NOT EDIT.
// Source: ../kubelet (interfaces: KubeletPodLister)
//
// Generated by this command:
//
//	mockgen -destination ./kubelet_mock_test.go -package cgroup ../kubelet KubeletPodLister
//

// Package cgroup is a generated GoMock package.
package cgroup

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	v1 "k8s.io/api/core/v1"
)

// MockKubeletPodLister is a mock of KubeletPodLister interface.
type MockKubeletPodLister struct {
	ctrl     *gomock.Controller
	recorder *MockKubeletPodListerMockRecorder
	isgomock struct{}
}

// MockKubeletPodListerMockRecorder is the mock recorder for MockKubeletPodLister.
type MockKubeletPodListerMockRecorder struct {
	mock *MockKubeletPodLister
}

// NewMockKubeletPodLister creates a new mock instance.
func NewMockKubeletPodLister(ctrl *gomock.Controller) *MockKubeletPodLister {
	mock := &MockKubeletPodLister{ctrl: ctrl}
	mock.recorder = &MockKubeletPodListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKubeletPodLister) EXPECT() *MockKubeletPodListerMockRecorder {
	return m.recorder
}

// ListPods mocks base method.
func (m *MockKubeletPodLister) ListPods() (*[]v1.Pod, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListPods")
	ret0, _ := ret[0].(*[]v1.Pod)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListPods indicates an expected call of ListPods.
func (mr *MockKubeletPodListerMockRecorder) ListPods() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListPods", reflect.TypeOf((*MockKubeletPodLister)(nil).ListPods))
}
